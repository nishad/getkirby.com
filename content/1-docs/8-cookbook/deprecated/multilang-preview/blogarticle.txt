Title: Multi-Language Preview

----

Date: 23.04.2012

----

Tags: releases, language

----

Text:

I've been working on a multi-language version for Kirby for quite some time and it already found its way into a client project. Today I'm happy to release a first preview, which you can test for your own purpose.

You can get the latest version on Github:
<https://github.com/bastianallgeier/kirbycms/tree/multilanguage>

It works exactly like the default version of Kirby and has only a few adjustments. So if you want to use it for an existing project, all you need to do is to replace the old kirby folder with the new kirby folder from the download.

Otherwise just get started with the Multi-Language version as you would with the regular version. If you need more help, please (link: docs/getting-started text: refer to the docs)

## What is it all about?

With the Multi-Language version of Kirby, you can easily creat multilingual sites without any effort. It's as easy as adding another text file for each language to your content folders:

(image: 01.png)

## How to activate multi-language support?

Go to site/config/config.php and activated multi-language support like this:

```php
c::set('lang.support', true);
c::set('lang.default', 'en');
c::set('lang.available', array('en', 'de'));
c::set('lang.detect', true);
```

If you are updating from an old version of Kirby, add those lines to your config, because they won't be there yet.

### lang.support

As soon as `lang.support` is set to true, Kirby will automatically start to generate language-specific URLs like:

```
http://yourdomain.com/en/blog/article-xyz
http://yourdomain.com/fr/blog/article-xyz
http://yourdomain.com/de/blog/article-xyz
```

### lang.default

With `lang.default` you define the default language code, which will be used if no language has been selected yet. It will also be used as a fallback when there's no translation available for content in a different language. This means that you can safely use all the content variables, even if you haven't translated all of them. If there's no translation you will get back the version from your default language.

### lang.available
Set `lang.available` to define all available translations. Those language codes correspond with the language codes you will use as appendix to your content filenames.

### lang.detect
When `lang.detect` is set to true, Kirby will try to detect the user's language from the user agent string and will try to redirect them to the best matching version of your site.

## Multi-Language Content Files

To translate your content, all you need to do is to duplicate your content text files and add the language code as appendix (before the file extension). For example if your content text file for a blog article is called `article.txt`, duplicate it and create translations like this:

```
article.de.txt
article.it.txt
article.fr.txt

```

You can decide if you want to add a language code to the original file as well. Otherwise it will be considered as English if your default language is set to `en` or whatever you set your default language to.

Creating those translation files is optional. You won't break anything if they are not there. You will just not get a translation :)

### site.txt

The site.txt can be translated in the same way:

```
site.de.txt
site.it.txt
site.fr.txt

```

## Static Language Variables

If you need site-wide translatable variables, you can either put them into site.txt and its translations, or you can do the following.

Add a new `languages` folder to your site folder. Add additional PHP files for each language. For example:

```
site/languages/en.php
site/languages/de.php
site/languages/it.php
site/languages/fr.php

```

Define your site-wide translatable variables in those files like this:

```php
<?php

l::set('next', 'weiter');
l::set('back', 'zurück');
l::set('ok', 'ok');
l::set('cancel', 'abbrechen');

?>

```

You can now use them in your templates, snippets and plugins like this:

```php
<?php echo l::get('next') ?>

```


## The Panel

(link: panel text: The Panel) already has support for the multi-language version, so you don't need to update that if you run (link: blog/panel-0-6 text: Panel 0.6) As soon as you switch on language support a select box should appear in the Panel sidebar.

(image: 02.png)


## Missing stuff

The preview should be pretty stable, but there are a few missing things, which I need to add in the next weeks.

If you are using additional content files to add captions or other meta info to your images for example, there's no way yet to translate those.

I haven't found a good way yet to translate URLs. As you know all URLs in Kirby are built by the structure in your content folder. This means that you can't translate:

```
http://yourdomain.com/en/about-us

```

…to…

```
http://yourdomain.com/en/ueber-uns

```

…for example.

This might be a minor issue in many projects, but in some you might really need that. What you can do so far is to use `mod_rewrite` to rewrite those URLs manually. But that's not very comfortable of course. If you are a developer and you got a suggestion how to solve this best, I'd really appreciate your help. I want to get this right without bloating the system.

## Do you like it?

It's really important to hear what you think about it and if there are ways to improve multi-language support.
