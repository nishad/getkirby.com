Title: How to add template-specific CSS files

----

Date: 16.07.2012

----

Category: performance

----

Description: Reduce page load times by using template specific CSS files.

----

Tags: tutorial, css

----

Text: As soon as you start working with multiple templates and a single CSS file for all of them, that file can easily get huge. You will end up with lots of CSS rules, which only apply to a certain template, but will be loaded on every page. This does not really make sense and so it's a good idea to separate template-specific CSS rules.

With Kirby there are two ways to solve this problem.

## Plan A

In every template you are probably going to load the header part of your HTML like this:

```php
<?php snippet('header') ?>

<!-- the rest of your template goes here -->

<?php snippet('footer') ?>
```

You can pass variables to snippets with the second argument, so you can simply tell your header, which css to load additionally to your main css file:

```php
<?php snippet('header', array('css' => 'assets/css/myawesome.css')) ?>
```

… and in your header snippet …

```php
<!DOCTYPE html>
<html lang="en">
<head>

  <title><?php echo html($site->title()) ?> - <?php echo html($page->title()) ?></title>
  <meta charset="utf-8" />

  <?php echo css('assets/css/styles.css') ?>
  <?php if(isset($css)) echo css($css) ?>

</head>

<body>

```

****

## Plan B: auto-magic

Plan A is nice, but there's a more simple way, which doesn't require to pass the CSS file for each included header.

You can ask for the used template on each page like this:

```php
<?php echo $page->template() ?>
```

This will give you the template name without the PHP extension. So what we need is a little PHP trickery for the header snippet:

```php
<!DOCTYPE html>
<html lang="en">
<head>

  <title><?php echo html($site->title()) ?> - <?php echo html($page->title()) ?></title>
  <meta charset="utf-8" />

  <?php

  echo css('assets/styles/styles.css');

  $cssURI  = 'assets/css/' . $page->template() . '.css';
  $cssRoot = c::get('root') . '/' . $cssURI;

  if(file_exists($cssRoot)) echo css($cssURI);

  ?>

</head>

<body>

```

This code will include the main stylesheet (styles.css) first and then it will try to find a stylesheet in the `assets/css` folder with the name of the current template. If it finds a matching CSS file, it will include that one as well. So all you need to do is to name your templates and stylesheets accordingly.

For example:

```
/templates/home.php => /assets/css/home.css
/templates/blog.php => /assets/css/blog.css
```

This makes adding custom CSS rules for each template a breeze and you can keep things separated without messing around with one huge CSS file.

## Related: Art-directed blog posts

If you want to get even more fancy with custom styles, you should read the tutorial about (link: docs/cookbook/art-directed-posts text: Art-directed blog posts), which will show how to add optional, custom css to each individual page of your site.

----

Likes: 52
