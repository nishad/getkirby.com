Title: Structure

----

Excerpt:

Structured data input, which stores data in a field as YAML.

----

Text:

The structure field makes it possible to add multiple complex entries to a field, which will be stored as YAML. A typical use case would be a list of addresses or team members.

## Example

```
fields:
  addresses:
    label: Addresses
    type: structure
    entry: >
      {{street}}<br />
      {{zip}} {{city}}
    fields:
      street:
        label: Street
        type: text
      zip:
        label: ZIP
        type: text
      city:
        label: City
        type: text

```

Such a structure will be stored in the content file like this:

```
addresses:
-
  street: Rue de WTF 17
  zip:    1112
  city:   Monaco
-
  street: 1212 Broadway
  zip:    4321
  city:   New York
-
  street: At the beach
  zip:    9999
  city:   The capitol of the Bahamas
```

### Fields

You can define any number of fields and use the same (link: docs/cheatsheet#panel-fields text: field types listed). The only exception is a structure field nested in a structure field.

### Entry template

You can use the `entry` option to define how the entries will be displayed in the list view. The syntax for entry templates is very simple. Double curly brackets define a variable and will be replaced with the appropriate content.

### Default values (since: 2.1)

You can set default values for structure fields which will prepopulate the field:

```
  emails: 
    label: Emails
    type: structure
    default: 
      - email: bastian@getkirby.com
      - email: sascha@getkirby.com
      - email: nico@getkirby.com
    fields: 
      email: 
        label: Email
        type: email
```

### Display style (since: 2.2)

Display entries in a table layout:

```
emails:
  label: Emails
  type: structure
  style: table
  ```

### Modal size (since: 2.2)

Control the width of the structure modals ("small", "medium" or "large"). 
  
 ```
emails:
  label: Emails
  type: structure
  modalsize: small
  ```
  
## Accessing structure fields in your templates
 
To access a structure field in your templates, you can use the [`$field->yaml()`](../field-methods/yaml) and [`$field->toStructure()`](../field-methods/toStructure) methods.
